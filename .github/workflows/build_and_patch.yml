name: Build Patched APK

on:
  workflow_dispatch:
    inputs:
      permsRemoval:
        description: 'Уровень удаления разрешений (более агрессивные уровни могут нарушить работу функций)'
        required: true
        default: 'dangerous'
        type: choice
        options:
          - 'none'
          - 'dangerous'
          - 'strict'
          - 'paranoid'
      experimental:
        description: 'Включить экспериментальные патчи Smali (ОТКЛЮЧИТЕ, ЕСЛИ ПРИЛОЖЕНИЕ НЕ РАБОТАЕТ)'
        required: false
        type: boolean
        default: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v5

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Download Apktool
      run: |
        wget https://bitbucket.org/iBotPeaches/apktool/downloads/apktool_2.9.3.jar -O apktool.jar
        sudo mv apktool.jar /usr/local/bin/apktool.jar
        echo '#!/bin/bash' | sudo tee /usr/local/bin/apktool
        echo 'java -jar /usr/local/bin/apktool.jar "$@"' | sudo tee -a /usr/local/bin/apktool
        sudo chmod +x /usr/local/bin/apktool

    - name: Set up Android SDK
      uses: android-actions/setup-android@v3
      with:
        packages: 'platform-tools build-tools;34.0.0'

    - name: Add Android Build Tools to PATH
      run: echo "${ANDROID_HOME}/build-tools/34.0.0" >> $GITHUB_PATH
      shell: bash

    - name: Decompile APK
      run: apktool d -f source_apk/ru.oneme.app.apk -o apk_workdir

    - name: Patch AndroidManifest.xml
      run: python scripts/manifest_patcher.py --level "${{ inputs.permsRemoval }}"

    - name: Run Smali Patcher
      run: python scripts/patcher.py --experimental "${{ inputs.experimental }}"

    - name: Rebuild APK (will have original manifest)
      run: apktool b apk_workdir --use-aapt2 -o temp_build.apk

    - name: Manually compile the patched manifest
      run: |
        aapt2 compile --dir apk_workdir/res -o compiled_res.zip
        aapt2 link --proto-format -o final_patched.apk -I "${ANDROID_HOME}/platforms/android-34/android.jar" \
          --manifest apk_workdir/AndroidManifest.xml -R compiled_res.zip

    - name: Extract the clean patched manifest
      run: unzip final_patched.apk AndroidManifest.xml

    - name: Replace the manifest in the main build
      run: zip -r temp_build.apk AndroidManifest.xml

    - name: Zipalign the APK
      run: zipalign -v 4 temp_build.apk rebuilt_aligned.apk

    - name: Generate a temporary signing key
      run: |
        keytool -genkey -v \
          -keystore temp-release-key.keystore \
          -alias temp_alias \
          -keyalg RSA \
          -keysize 2048 \
          -validity 10000 \
          -storepass temppassword \
          -keypass temppassword \
          -dname "CN=Anonymous, OU=Anonymous, O=Anonymous, L=Unknown, ST=Unknown, C=XX"

    - name: Sign the APK with the temporary key
      run: |
        apksigner sign --ks temp-release-key.keystore \
        --ks-key-alias temp_alias \
        --ks-pass pass:temppassword \
        --key-pass pass:temppassword \
        rebuilt_aligned.apk

    - name: Rename Final APK
      run: mv rebuilt_aligned.apk patched-app-release.apk

    - name: Upload Patched APK as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: patched-apk
        path: patched-app-release.apk